// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prototype/operation.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class account_name;
@class beneficiary_route_type;
@class chain_properties;
@class coin;
@class public_key_type;
@class vest;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum report_operation_tag

typedef GPB_ENUM(report_operation_tag) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  report_operation_tag_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  report_operation_tag_ChildPornography = 0,
  report_operation_tag_Racism = 1,
  report_operation_tag_Reactionary = 2,
  report_operation_tag_Plagiarism = 3,
  report_operation_tag_Slander = 4,
  report_operation_tag_FalsePropaganda = 5,
  report_operation_tag_Pornography = 6,
};

GPBEnumDescriptor *report_operation_tag_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL report_operation_tag_IsValidValue(int32_t value);

#pragma mark - OperationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface OperationRoot : GPBRootObject
@end

#pragma mark - account_create_operation

typedef GPB_ENUM(account_create_operation_FieldNumber) {
  account_create_operation_FieldNumber_Fee = 1,
  account_create_operation_FieldNumber_Creator = 2,
  account_create_operation_FieldNumber_NewAccountName = 3,
  account_create_operation_FieldNumber_Owner = 4,
  account_create_operation_FieldNumber_JsonMetadata = 8,
};

@interface account_create_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) coin *fee;
/** Test to see if @c fee has been set. */
@property(nonatomic, readwrite) BOOL hasFee;

@property(nonatomic, readwrite, strong, null_resettable) account_name *creator;
/** Test to see if @c creator has been set. */
@property(nonatomic, readwrite) BOOL hasCreator;

@property(nonatomic, readwrite, strong, null_resettable) account_name *newAccountName NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newAccountName has been set. */
@property(nonatomic, readwrite) BOOL hasNewAccountName;

@property(nonatomic, readwrite, strong, null_resettable) public_key_type *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *jsonMetadata;

@end

#pragma mark - transfer_operation

typedef GPB_ENUM(transfer_operation_FieldNumber) {
  transfer_operation_FieldNumber_From = 1,
  transfer_operation_FieldNumber_To = 2,
  transfer_operation_FieldNumber_Amount = 3,
  transfer_operation_FieldNumber_Memo = 4,
};

@interface transfer_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *from;
/** Test to see if @c from has been set. */
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite, strong, null_resettable) account_name *to;
/** Test to see if @c to has been set. */
@property(nonatomic, readwrite) BOOL hasTo;

@property(nonatomic, readwrite, strong, null_resettable) coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *memo;

@end

#pragma mark - transfer_to_vesting_operation

typedef GPB_ENUM(transfer_to_vesting_operation_FieldNumber) {
  transfer_to_vesting_operation_FieldNumber_From = 1,
  transfer_to_vesting_operation_FieldNumber_To = 2,
  transfer_to_vesting_operation_FieldNumber_Amount = 3,
};

@interface transfer_to_vesting_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *from;
/** Test to see if @c from has been set. */
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite, strong, null_resettable) account_name *to;
/** Test to see if @c to has been set. */
@property(nonatomic, readwrite) BOOL hasTo;

@property(nonatomic, readwrite, strong, null_resettable) coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@end

#pragma mark - vote_operation

typedef GPB_ENUM(vote_operation_FieldNumber) {
  vote_operation_FieldNumber_Voter = 1,
  vote_operation_FieldNumber_Idx = 3,
};

@interface vote_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *voter;
/** Test to see if @c voter has been set. */
@property(nonatomic, readwrite) BOOL hasVoter;

@property(nonatomic, readwrite) uint64_t idx;

@end

#pragma mark - bp_register_operation

typedef GPB_ENUM(bp_register_operation_FieldNumber) {
  bp_register_operation_FieldNumber_Owner = 1,
  bp_register_operation_FieldNumber_URL = 2,
  bp_register_operation_FieldNumber_Desc = 3,
  bp_register_operation_FieldNumber_BlockSigningKey = 4,
  bp_register_operation_FieldNumber_Props = 5,
};

@interface bp_register_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@property(nonatomic, readwrite, strong, null_resettable) public_key_type *blockSigningKey;
/** Test to see if @c blockSigningKey has been set. */
@property(nonatomic, readwrite) BOOL hasBlockSigningKey;

@property(nonatomic, readwrite, strong, null_resettable) chain_properties *props;
/** Test to see if @c props has been set. */
@property(nonatomic, readwrite) BOOL hasProps;

@end

#pragma mark - bp_unregister_operation

typedef GPB_ENUM(bp_unregister_operation_FieldNumber) {
  bp_unregister_operation_FieldNumber_Owner = 1,
};

@interface bp_unregister_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@end

#pragma mark - bp_vote_operation

typedef GPB_ENUM(bp_vote_operation_FieldNumber) {
  bp_vote_operation_FieldNumber_Voter = 1,
  bp_vote_operation_FieldNumber_Witness = 2,
  bp_vote_operation_FieldNumber_Cancel = 3,
};

@interface bp_vote_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *voter;
/** Test to see if @c voter has been set. */
@property(nonatomic, readwrite) BOOL hasVoter;

@property(nonatomic, readwrite, strong, null_resettable) account_name *witness;
/** Test to see if @c witness has been set. */
@property(nonatomic, readwrite) BOOL hasWitness;

@property(nonatomic, readwrite) BOOL cancel;

@end

#pragma mark - follow_operation

typedef GPB_ENUM(follow_operation_FieldNumber) {
  follow_operation_FieldNumber_Account = 1,
  follow_operation_FieldNumber_FAccount = 2,
  follow_operation_FieldNumber_Cancel = 3,
};

@interface follow_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@property(nonatomic, readwrite, strong, null_resettable) account_name *fAccount;
/** Test to see if @c fAccount has been set. */
@property(nonatomic, readwrite) BOOL hasFAccount;

@property(nonatomic, readwrite) BOOL cancel;

@end

#pragma mark - contract_deploy_operation

typedef GPB_ENUM(contract_deploy_operation_FieldNumber) {
  contract_deploy_operation_FieldNumber_Owner = 1,
  contract_deploy_operation_FieldNumber_Contract = 2,
  contract_deploy_operation_FieldNumber_Abi = 3,
  contract_deploy_operation_FieldNumber_Code = 4,
};

@interface contract_deploy_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contract;

@property(nonatomic, readwrite, copy, null_resettable) NSString *abi;

@property(nonatomic, readwrite, copy, null_resettable) NSData *code;

@end

#pragma mark - contract_apply_operation

typedef GPB_ENUM(contract_apply_operation_FieldNumber) {
  contract_apply_operation_FieldNumber_Caller = 1,
  contract_apply_operation_FieldNumber_Owner = 2,
  contract_apply_operation_FieldNumber_Contract = 3,
  contract_apply_operation_FieldNumber_Method = 4,
  contract_apply_operation_FieldNumber_Params = 5,
  contract_apply_operation_FieldNumber_Amount = 6,
  contract_apply_operation_FieldNumber_Gas = 7,
};

@interface contract_apply_operation : GPBMessage

/** who apply this op */
@property(nonatomic, readwrite, strong, null_resettable) account_name *caller;
/** Test to see if @c caller has been set. */
@property(nonatomic, readwrite) BOOL hasCaller;

/** who owner this contract */
@property(nonatomic, readwrite, strong, null_resettable) account_name *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

/** contract name */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contract;

/** call which method */
@property(nonatomic, readwrite, copy, null_resettable) NSString *method;

/** param list, encoded as a single json string. e.g. '[]' or '["hello", 3, true]' */
@property(nonatomic, readwrite, copy, null_resettable) NSString *params;

/** cos-coin send to the contract */
@property(nonatomic, readwrite, strong, null_resettable) coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

/** max permit gas cost when apply */
@property(nonatomic, readwrite, strong, null_resettable) coin *gas;
/** Test to see if @c gas has been set. */
@property(nonatomic, readwrite) BOOL hasGas;

@end

#pragma mark - internal_contract_apply_operation

typedef GPB_ENUM(internal_contract_apply_operation_FieldNumber) {
  internal_contract_apply_operation_FieldNumber_FromCaller = 1,
  internal_contract_apply_operation_FieldNumber_FromOwner = 2,
  internal_contract_apply_operation_FieldNumber_FromContract = 3,
  internal_contract_apply_operation_FieldNumber_FromMethod = 4,
  internal_contract_apply_operation_FieldNumber_ToOwner = 5,
  internal_contract_apply_operation_FieldNumber_ToContract = 6,
  internal_contract_apply_operation_FieldNumber_ToMethod = 7,
  internal_contract_apply_operation_FieldNumber_Params = 8,
  internal_contract_apply_operation_FieldNumber_Amount = 9,
  internal_contract_apply_operation_FieldNumber_Gas = 10,
};

@interface internal_contract_apply_operation : GPBMessage

/** caller of the calling contract */
@property(nonatomic, readwrite, strong, null_resettable) account_name *fromCaller;
/** Test to see if @c fromCaller has been set. */
@property(nonatomic, readwrite) BOOL hasFromCaller;

/** owner of the calling contract */
@property(nonatomic, readwrite, strong, null_resettable) account_name *fromOwner;
/** Test to see if @c fromOwner has been set. */
@property(nonatomic, readwrite) BOOL hasFromOwner;

/** name of the calling contract */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromContract;

/** method of the calling contract */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromMethod;

/** owner of the called contract */
@property(nonatomic, readwrite, strong, null_resettable) account_name *toOwner;
/** Test to see if @c toOwner has been set. */
@property(nonatomic, readwrite) BOOL hasToOwner;

/** name of the called contract */
@property(nonatomic, readwrite, copy, null_resettable) NSString *toContract;

/** method of the called contract */
@property(nonatomic, readwrite, copy, null_resettable) NSString *toMethod;

/** parameters encoded by internal serialization protocol between contract VM & host */
@property(nonatomic, readwrite, copy, null_resettable) NSData *params;

/** amount of coins to transfer from caller contract to called contract */
@property(nonatomic, readwrite, strong, null_resettable) coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

/** max gas cost for this operation */
@property(nonatomic, readwrite, strong, null_resettable) coin *gas;
/** Test to see if @c gas has been set. */
@property(nonatomic, readwrite) BOOL hasGas;

@end

#pragma mark - post_operation

typedef GPB_ENUM(post_operation_FieldNumber) {
  post_operation_FieldNumber_Uuid = 1,
  post_operation_FieldNumber_Owner = 2,
  post_operation_FieldNumber_Title = 3,
  post_operation_FieldNumber_Content = 4,
  post_operation_FieldNumber_TagsArray = 5,
  post_operation_FieldNumber_BeneficiariesArray = 6,
};

@interface post_operation : GPBMessage

@property(nonatomic, readwrite) uint64_t uuid;

@property(nonatomic, readwrite, strong, null_resettable) account_name *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tagsArray;
/** The number of items in @c tagsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tagsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<beneficiary_route_type*> *beneficiariesArray;
/** The number of items in @c beneficiariesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger beneficiariesArray_Count;

@end

#pragma mark - reply_operation

typedef GPB_ENUM(reply_operation_FieldNumber) {
  reply_operation_FieldNumber_Uuid = 1,
  reply_operation_FieldNumber_Owner = 2,
  reply_operation_FieldNumber_Content = 3,
  reply_operation_FieldNumber_ParentUuid = 4,
  reply_operation_FieldNumber_BeneficiariesArray = 6,
};

@interface reply_operation : GPBMessage

@property(nonatomic, readwrite) uint64_t uuid;

@property(nonatomic, readwrite, strong, null_resettable) account_name *owner;
/** Test to see if @c owner has been set. */
@property(nonatomic, readwrite) BOOL hasOwner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite) uint64_t parentUuid;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<beneficiary_route_type*> *beneficiariesArray;
/** The number of items in @c beneficiariesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger beneficiariesArray_Count;

@end

#pragma mark - claim_all_operation

typedef GPB_ENUM(claim_all_operation_FieldNumber) {
  claim_all_operation_FieldNumber_Account = 1,
};

@interface claim_all_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@end

#pragma mark - claim_operation

typedef GPB_ENUM(claim_operation_FieldNumber) {
  claim_operation_FieldNumber_Account = 1,
  claim_operation_FieldNumber_Amount = 2,
};

@interface claim_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@property(nonatomic, readwrite) uint64_t amount;

@end

#pragma mark - report_operation

typedef GPB_ENUM(report_operation_FieldNumber) {
  report_operation_FieldNumber_Reporter = 1,
  report_operation_FieldNumber_Reported = 2,
  report_operation_FieldNumber_ReportTagArray = 3,
  report_operation_FieldNumber_IsArbitration = 4,
  report_operation_FieldNumber_IsApproved = 5,
};

@interface report_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *reporter;
/** Test to see if @c reporter has been set. */
@property(nonatomic, readwrite) BOOL hasReporter;

@property(nonatomic, readwrite) uint64_t reported;

// |reportTagArray| contains |report_operation_tag|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *reportTagArray;
/** The number of items in @c reportTagArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reportTagArray_Count;

@property(nonatomic, readwrite) BOOL isArbitration;

@property(nonatomic, readwrite) BOOL isApproved;

@end

#pragma mark - convert_vesting_operation

typedef GPB_ENUM(convert_vesting_operation_FieldNumber) {
  convert_vesting_operation_FieldNumber_From = 1,
  convert_vesting_operation_FieldNumber_Amount = 2,
};

@interface convert_vesting_operation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *from;
/** Test to see if @c from has been set. */
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite, strong, null_resettable) vest *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
