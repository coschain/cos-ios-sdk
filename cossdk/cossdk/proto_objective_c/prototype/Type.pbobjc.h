// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prototype/type.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class account_name;
@class coin;
@class sha256;
@class time_point_sec;
@class vest;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TypeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface TypeRoot : GPBRootObject
@end

#pragma mark - account_name

typedef GPB_ENUM(account_name_FieldNumber) {
  account_name_FieldNumber_Value = 1,
};

@interface account_name : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - chain_id

typedef GPB_ENUM(chain_id_FieldNumber) {
  chain_id_FieldNumber_Value = 1,
};

@interface chain_id : GPBMessage

@property(nonatomic, readwrite) uint32_t value;

@end

#pragma mark - coin

typedef GPB_ENUM(coin_FieldNumber) {
  coin_FieldNumber_Value = 1,
};

@interface coin : GPBMessage

@property(nonatomic, readwrite) uint64_t value;

@end

#pragma mark - vest

typedef GPB_ENUM(vest_FieldNumber) {
  vest_FieldNumber_Value = 1,
};

@interface vest : GPBMessage

@property(nonatomic, readwrite) uint64_t value;

@end

#pragma mark - public_key_type

typedef GPB_ENUM(public_key_type_FieldNumber) {
  public_key_type_FieldNumber_Data_p = 1,
};

@interface public_key_type : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - private_key_type

typedef GPB_ENUM(private_key_type_FieldNumber) {
  private_key_type_FieldNumber_Data_p = 1,
};

@interface private_key_type : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - time_point_sec

typedef GPB_ENUM(time_point_sec_FieldNumber) {
  time_point_sec_FieldNumber_UtcSeconds = 1,
};

@interface time_point_sec : GPBMessage

@property(nonatomic, readwrite) uint32_t utcSeconds;

@end

#pragma mark - signature_type

typedef GPB_ENUM(signature_type_FieldNumber) {
  signature_type_FieldNumber_Sig = 1,
};

@interface signature_type : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *sig;

@end

#pragma mark - sha256

typedef GPB_ENUM(sha256_FieldNumber) {
  sha256_FieldNumber_Hash_p = 1,
};

@interface sha256 : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@end

#pragma mark - chain_properties

typedef GPB_ENUM(chain_properties_FieldNumber) {
  chain_properties_FieldNumber_AccountCreationFee = 1,
  chain_properties_FieldNumber_MaximumBlockSize = 2,
};

@interface chain_properties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) coin *accountCreationFee;
/** Test to see if @c accountCreationFee has been set. */
@property(nonatomic, readwrite) BOOL hasAccountCreationFee;

@property(nonatomic, readwrite) uint32_t maximumBlockSize;

@end

#pragma mark - dynamic_properties

typedef GPB_ENUM(dynamic_properties_FieldNumber) {
  dynamic_properties_FieldNumber_Id_p = 1,
  dynamic_properties_FieldNumber_HeadBlockId = 2,
  dynamic_properties_FieldNumber_HeadBlockNumber = 3,
  dynamic_properties_FieldNumber_MaximumBlockSize = 4,
  dynamic_properties_FieldNumber_TotalCos = 5,
  dynamic_properties_FieldNumber_Time = 6,
  dynamic_properties_FieldNumber_CurrentWitness = 7,
  dynamic_properties_FieldNumber_IrreversibleBlockNum = 8,
  dynamic_properties_FieldNumber_Tps = 9,
  dynamic_properties_FieldNumber_TotalVestingShares = 10,
  dynamic_properties_FieldNumber_CurrentSupply = 11,
  dynamic_properties_FieldNumber_CurrentAslot = 12,
  dynamic_properties_FieldNumber_PostWeightedVps = 13,
  dynamic_properties_FieldNumber_PostRewards = 14,
  dynamic_properties_FieldNumber_TotalTrxCnt = 15,
  dynamic_properties_FieldNumber_TotalPostCnt = 16,
  dynamic_properties_FieldNumber_TotalUserCnt = 17,
  dynamic_properties_FieldNumber_MaxTps = 18,
  dynamic_properties_FieldNumber_MaxTpsBlockNum = 19,
  dynamic_properties_FieldNumber_HeadBlockPrefix = 20,
  dynamic_properties_FieldNumber_ReportRewards = 21,
  dynamic_properties_FieldNumber_IthYear = 22,
  dynamic_properties_FieldNumber_AnnualBudget = 23,
  dynamic_properties_FieldNumber_AnnualMinted = 24,
  dynamic_properties_FieldNumber_PostDappRewards = 25,
  dynamic_properties_FieldNumber_VoterRewards = 26,
  dynamic_properties_FieldNumber_ReplyRewards = 27,
  dynamic_properties_FieldNumber_ReplyWeightedVps = 28,
  dynamic_properties_FieldNumber_ReplyDappRewards = 29,
};

@interface dynamic_properties : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, strong, null_resettable) sha256 *headBlockId;
/** Test to see if @c headBlockId has been set. */
@property(nonatomic, readwrite) BOOL hasHeadBlockId;

@property(nonatomic, readwrite) uint64_t headBlockNumber;

@property(nonatomic, readwrite) uint32_t maximumBlockSize;

@property(nonatomic, readwrite, strong, null_resettable) coin *totalCos;
/** Test to see if @c totalCos has been set. */
@property(nonatomic, readwrite) BOOL hasTotalCos;

@property(nonatomic, readwrite, strong, null_resettable) time_point_sec *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@property(nonatomic, readwrite, strong, null_resettable) account_name *currentWitness;
/** Test to see if @c currentWitness has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentWitness;

@property(nonatomic, readwrite) uint64_t irreversibleBlockNum;

@property(nonatomic, readwrite) uint32_t tps;

@property(nonatomic, readwrite, strong, null_resettable) vest *totalVestingShares;
/** Test to see if @c totalVestingShares has been set. */
@property(nonatomic, readwrite) BOOL hasTotalVestingShares;

@property(nonatomic, readwrite, strong, null_resettable) coin *currentSupply;
/** Test to see if @c currentSupply has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentSupply;

@property(nonatomic, readwrite) uint32_t currentAslot;

@property(nonatomic, readwrite) uint64_t postWeightedVps;

@property(nonatomic, readwrite, strong, null_resettable) vest *postRewards;
/** Test to see if @c postRewards has been set. */
@property(nonatomic, readwrite) BOOL hasPostRewards;

@property(nonatomic, readwrite) uint64_t totalTrxCnt;

@property(nonatomic, readwrite) uint64_t totalPostCnt;

@property(nonatomic, readwrite) uint64_t totalUserCnt;

@property(nonatomic, readwrite) uint32_t maxTps;

@property(nonatomic, readwrite) uint64_t maxTpsBlockNum;

@property(nonatomic, readwrite) uint32_t headBlockPrefix;

@property(nonatomic, readwrite, strong, null_resettable) vest *reportRewards;
/** Test to see if @c reportRewards has been set. */
@property(nonatomic, readwrite) BOOL hasReportRewards;

@property(nonatomic, readwrite) uint32_t ithYear;

@property(nonatomic, readwrite, strong, null_resettable) vest *annualBudget;
/** Test to see if @c annualBudget has been set. */
@property(nonatomic, readwrite) BOOL hasAnnualBudget;

@property(nonatomic, readwrite, strong, null_resettable) vest *annualMinted;
/** Test to see if @c annualMinted has been set. */
@property(nonatomic, readwrite) BOOL hasAnnualMinted;

@property(nonatomic, readwrite, strong, null_resettable) vest *postDappRewards;
/** Test to see if @c postDappRewards has been set. */
@property(nonatomic, readwrite) BOOL hasPostDappRewards;

@property(nonatomic, readwrite, strong, null_resettable) vest *voterRewards;
/** Test to see if @c voterRewards has been set. */
@property(nonatomic, readwrite) BOOL hasVoterRewards;

@property(nonatomic, readwrite, strong, null_resettable) vest *replyRewards;
/** Test to see if @c replyRewards has been set. */
@property(nonatomic, readwrite) BOOL hasReplyRewards;

@property(nonatomic, readwrite) uint64_t replyWeightedVps;

@property(nonatomic, readwrite, strong, null_resettable) vest *replyDappRewards;
/** Test to see if @c replyDappRewards has been set. */
@property(nonatomic, readwrite) BOOL hasReplyDappRewards;

@end

#pragma mark - internal_rewards_keeper

typedef GPB_ENUM(internal_rewards_keeper_FieldNumber) {
  internal_rewards_keeper_FieldNumber_Id_p = 1,
  internal_rewards_keeper_FieldNumber_Rewards = 2,
};

@interface internal_rewards_keeper : GPBMessage

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, vest*> *rewards;
/** The number of items in @c rewards without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rewards_Count;

@end

#pragma mark - beneficiary_route_type

typedef GPB_ENUM(beneficiary_route_type_FieldNumber) {
  beneficiary_route_type_FieldNumber_Name = 1,
  beneficiary_route_type_FieldNumber_Weight = 2,
};

@interface beneficiary_route_type : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) account_name *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite) uint32_t weight;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
