// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prototype/transaction.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class account_create_operation;
@class account_name;
@class block_header;
@class bp_register_operation;
@class bp_unregister_operation;
@class bp_vote_operation;
@class claim_all_operation;
@class claim_operation;
@class contract_apply_operation;
@class contract_deploy_operation;
@class convert_vesting_operation;
@class follow_operation;
@class operation;
@class operation_receipt;
@class operation_receipt_with_info;
@class post_operation;
@class reply_operation;
@class report_operation;
@class sha256;
@class signature_type;
@class signed_block_header;
@class signed_transaction;
@class time_point_sec;
@class transaction;
@class transaction_receipt;
@class transaction_receipt_with_info;
@class transaction_wrapper;
@class transfer_operation;
@class transfer_to_vesting_operation;
@class vote_operation;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TransactionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface TransactionRoot : GPBRootObject
@end

#pragma mark - operation

typedef GPB_ENUM(operation_FieldNumber) {
  operation_FieldNumber_Op1 = 1,
  operation_FieldNumber_Op2 = 2,
  operation_FieldNumber_Op3 = 3,
  operation_FieldNumber_Op4 = 4,
  operation_FieldNumber_Op5 = 5,
  operation_FieldNumber_Op6 = 6,
  operation_FieldNumber_Op7 = 7,
  operation_FieldNumber_Op8 = 8,
  operation_FieldNumber_Op9 = 9,
  operation_FieldNumber_Op10 = 10,
  operation_FieldNumber_Op11 = 11,
  operation_FieldNumber_Op12 = 12,
  operation_FieldNumber_Op13 = 13,
  operation_FieldNumber_Op14 = 14,
  operation_FieldNumber_Op15 = 15,
  operation_FieldNumber_Op16 = 16,
};

typedef GPB_ENUM(operation_Op_OneOfCase) {
  operation_Op_OneOfCase_GPBUnsetOneOfCase = 0,
  operation_Op_OneOfCase_Op1 = 1,
  operation_Op_OneOfCase_Op2 = 2,
  operation_Op_OneOfCase_Op3 = 3,
  operation_Op_OneOfCase_Op4 = 4,
  operation_Op_OneOfCase_Op5 = 5,
  operation_Op_OneOfCase_Op6 = 6,
  operation_Op_OneOfCase_Op7 = 7,
  operation_Op_OneOfCase_Op8 = 8,
  operation_Op_OneOfCase_Op9 = 9,
  operation_Op_OneOfCase_Op10 = 10,
  operation_Op_OneOfCase_Op11 = 11,
  operation_Op_OneOfCase_Op12 = 12,
  operation_Op_OneOfCase_Op13 = 13,
  operation_Op_OneOfCase_Op14 = 14,
  operation_Op_OneOfCase_Op15 = 15,
  operation_Op_OneOfCase_Op16 = 16,
};

@interface operation : GPBMessage

@property(nonatomic, readonly) operation_Op_OneOfCase opOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) account_create_operation *op1;

@property(nonatomic, readwrite, strong, null_resettable) transfer_operation *op2;

@property(nonatomic, readwrite, strong, null_resettable) bp_register_operation *op3;

@property(nonatomic, readwrite, strong, null_resettable) bp_unregister_operation *op4;

@property(nonatomic, readwrite, strong, null_resettable) bp_vote_operation *op5;

@property(nonatomic, readwrite, strong, null_resettable) post_operation *op6;

@property(nonatomic, readwrite, strong, null_resettable) reply_operation *op7;

@property(nonatomic, readwrite, strong, null_resettable) follow_operation *op8;

@property(nonatomic, readwrite, strong, null_resettable) vote_operation *op9;

@property(nonatomic, readwrite, strong, null_resettable) transfer_to_vesting_operation *op10;

@property(nonatomic, readwrite, strong, null_resettable) claim_operation *op11;

@property(nonatomic, readwrite, strong, null_resettable) claim_all_operation *op12;

@property(nonatomic, readwrite, strong, null_resettable) contract_deploy_operation *op13;

@property(nonatomic, readwrite, strong, null_resettable) contract_apply_operation *op14;

@property(nonatomic, readwrite, strong, null_resettable) report_operation *op15;

@property(nonatomic, readwrite, strong, null_resettable) convert_vesting_operation *op16;

@end

/**
 * Clears whatever value was set for the oneof 'op'.
 **/
void operation_ClearOpOneOfCase(operation *message);

#pragma mark - transaction

typedef GPB_ENUM(transaction_FieldNumber) {
  transaction_FieldNumber_RefBlockNum = 1,
  transaction_FieldNumber_RefBlockPrefix = 2,
  transaction_FieldNumber_Expiration = 3,
  transaction_FieldNumber_OperationsArray = 4,
};

/**
 * transaction
 **/
@interface transaction : GPBMessage

@property(nonatomic, readwrite) uint32_t refBlockNum;

@property(nonatomic, readwrite) uint32_t refBlockPrefix;

@property(nonatomic, readwrite, strong, null_resettable) time_point_sec *expiration;
/** Test to see if @c expiration has been set. */
@property(nonatomic, readwrite) BOOL hasExpiration;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<operation*> *operationsArray;
/** The number of items in @c operationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger operationsArray_Count;

@end

#pragma mark - signed_transaction

typedef GPB_ENUM(signed_transaction_FieldNumber) {
  signed_transaction_FieldNumber_Trx = 1,
  signed_transaction_FieldNumber_Signature = 2,
};

@interface signed_transaction : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) transaction *trx;
/** Test to see if @c trx has been set. */
@property(nonatomic, readwrite) BOOL hasTrx;

@property(nonatomic, readwrite, strong, null_resettable) signature_type *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@end

#pragma mark - operation_receipt_with_info

typedef GPB_ENUM(operation_receipt_with_info_FieldNumber) {
  operation_receipt_with_info_FieldNumber_Status = 1,
  operation_receipt_with_info_FieldNumber_GasUsage = 5,
  operation_receipt_with_info_FieldNumber_VmConsole = 6,
};

@interface operation_receipt_with_info : GPBMessage

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) uint64_t gasUsage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *vmConsole;

@end

#pragma mark - operation_receipt

typedef GPB_ENUM(operation_receipt_FieldNumber) {
  operation_receipt_FieldNumber_Status = 1,
};

@interface operation_receipt : GPBMessage

@property(nonatomic, readwrite) uint32_t status;

@end

#pragma mark - transaction_receipt

typedef GPB_ENUM(transaction_receipt_FieldNumber) {
  transaction_receipt_FieldNumber_Status = 1,
  transaction_receipt_FieldNumber_TotalGasUsage = 2,
  transaction_receipt_FieldNumber_OpResultsArray = 3,
};

@interface transaction_receipt : GPBMessage

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) uint64_t totalGasUsage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<operation_receipt*> *opResultsArray;
/** The number of items in @c opResultsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger opResultsArray_Count;

@end

#pragma mark - transaction_receipt_with_info

typedef GPB_ENUM(transaction_receipt_with_info_FieldNumber) {
  transaction_receipt_with_info_FieldNumber_Status = 1,
  transaction_receipt_with_info_FieldNumber_TotalGasUsage = 2,
  transaction_receipt_with_info_FieldNumber_ErrorInfo = 3,
  transaction_receipt_with_info_FieldNumber_OpResultsArray = 4,
};

@interface transaction_receipt_with_info : GPBMessage

@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) uint64_t totalGasUsage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<operation_receipt_with_info*> *opResultsArray;
/** The number of items in @c opResultsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger opResultsArray_Count;

@end

#pragma mark - estimate_trx_result

typedef GPB_ENUM(estimate_trx_result_FieldNumber) {
  estimate_trx_result_FieldNumber_SigTrx = 1,
  estimate_trx_result_FieldNumber_Receipt = 2,
};

@interface estimate_trx_result : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) signed_transaction *sigTrx;
/** Test to see if @c sigTrx has been set. */
@property(nonatomic, readwrite) BOOL hasSigTrx;

@property(nonatomic, readwrite, strong, null_resettable) transaction_receipt_with_info *receipt;
/** Test to see if @c receipt has been set. */
@property(nonatomic, readwrite) BOOL hasReceipt;

@end

#pragma mark - transaction_wrapper

typedef GPB_ENUM(transaction_wrapper_FieldNumber) {
  transaction_wrapper_FieldNumber_SigTrx = 1,
  transaction_wrapper_FieldNumber_Invoice = 2,
};

@interface transaction_wrapper : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) signed_transaction *sigTrx;
/** Test to see if @c sigTrx has been set. */
@property(nonatomic, readwrite) BOOL hasSigTrx;

@property(nonatomic, readwrite, strong, null_resettable) transaction_receipt *invoice;
/** Test to see if @c invoice has been set. */
@property(nonatomic, readwrite) BOOL hasInvoice;

@end

#pragma mark - block_header

typedef GPB_ENUM(block_header_FieldNumber) {
  block_header_FieldNumber_Previous = 1,
  block_header_FieldNumber_Timestamp = 2,
  block_header_FieldNumber_Witness = 3,
  block_header_FieldNumber_TransactionMerkleRoot = 4,
};

/**
 * block
 **/
@interface block_header : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) sha256 *previous;
/** Test to see if @c previous has been set. */
@property(nonatomic, readwrite) BOOL hasPrevious;

@property(nonatomic, readwrite, strong, null_resettable) time_point_sec *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) account_name *witness;
/** Test to see if @c witness has been set. */
@property(nonatomic, readwrite) BOOL hasWitness;

@property(nonatomic, readwrite, strong, null_resettable) sha256 *transactionMerkleRoot;
/** Test to see if @c transactionMerkleRoot has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionMerkleRoot;

@end

#pragma mark - signed_block_header

typedef GPB_ENUM(signed_block_header_FieldNumber) {
  signed_block_header_FieldNumber_Header = 1,
  signed_block_header_FieldNumber_WitnessSignature = 2,
};

@interface signed_block_header : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) block_header *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) signature_type *witnessSignature;
/** Test to see if @c witnessSignature has been set. */
@property(nonatomic, readwrite) BOOL hasWitnessSignature;

@end

#pragma mark - signed_block

typedef GPB_ENUM(signed_block_FieldNumber) {
  signed_block_FieldNumber_SignedHeader = 1,
  signed_block_FieldNumber_TransactionsArray = 2,
};

@interface signed_block : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) signed_block_header *signedHeader;
/** Test to see if @c signedHeader has been set. */
@property(nonatomic, readwrite) BOOL hasSignedHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<transaction_wrapper*> *transactionsArray;
/** The number of items in @c transactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionsArray_Count;

@end

#pragma mark - empty_signed_block

typedef GPB_ENUM(empty_signed_block_FieldNumber) {
  empty_signed_block_FieldNumber_SignedHeader = 1,
  empty_signed_block_FieldNumber_TrxCount = 2,
};

@interface empty_signed_block : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) signed_block_header *signedHeader;
/** Test to see if @c signedHeader has been set. */
@property(nonatomic, readwrite) BOOL hasSignedHeader;

@property(nonatomic, readwrite) uint32_t trxCount;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
